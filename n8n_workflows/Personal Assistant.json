{
  "name": "Personal Assistant",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=You are a helpful assistant and always respond to me with my first name, Amit\n\n## AI Tools\n\n2. Use the calendar_agent tool to search, create, update, and delete Google calendar events.\n3. Call the document_agent tool to process, upload, parse, and manage any documents (invoices, contracts, receipts, documents, etc) that the user sends with the one exception being audio files. Here is the document ID: {{ $('Telegram Trigger').item.json.message.document.file_id }}. For example, the mime_type could be application/pdf\n4. Call the airtable_tasks tool get, search, create, update or delete tasks in Airtable\n\n6. Call the email_agent for everything related to emails. If the user asks to send an email now, make sure to send the email immediately. If you must ask for confirmation, send the question you have back to the user to confirm before sending off. If the user asks to check for new emails, call the email_agent tool. \n\n## Rules\n\n2. If you're calling both the calendar_agent and the email_agent at the same time, please complete any task in the calendar_agent first before sending off an email\n\n4. If the user is asking to send an email, it means to send it immediately.\n\nThe current date is {{ $now }}\n\n\n##Responses\n3. document_agent: If successful, please let the user know that the document has been uploaded to Google Drive and all the line items from the document have been extracted and added into the Google Sheet.\n\nNever send the same message twice"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        580,
        440
      ],
      "id": "9aeb473b-5baf-4814-aaf0-13f8311d5d3c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        260,
        680
      ],
      "id": "5669449d-1fba-48e0-bf8e-e580139cd485",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "9f619NiARiQGzGvW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        560,
        760
      ],
      "id": "855cf494-4bc0-483f-b4b3-a9b1054c66c9",
      "name": "Calculator"
    },
    {
      "parameters": {
        "name": "airtable_tasks",
        "description": "Call this tool to search, get create, update or delete tasks in Airtable",
        "workflowId": {
          "__rl": true,
          "value": "gFvOam4DYWWr8Bbc",
          "mode": "list",
          "cachedResultName": "Airtable Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message": "={{ $fromAI(\"message\", \"what is the message you're trying to send to airtable\") }}",
            "memory": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [
            "message"
          ],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "memory",
              "displayName": "memory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        960,
        800
      ],
      "id": "920a0567-2188-4816-947d-8bb86906dd8d",
      "name": "Airtable"
    },
    {
      "parameters": {
        "name": "document_agent",
        "description": "Call this tool to manage documents, invoices, contracts, and receipts",
        "workflowId": {
          "__rl": true,
          "value": "W4Z2oMtQxhDcPHa6",
          "mode": "list",
          "cachedResultName": "Document Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file_id": "={{ $fromAI(\"file_id\", \"this is the file_id of the document from Telegram\") }}"
          },
          "matchingColumns": [
            "file_id"
          ],
          "schema": [
            {
              "id": "file_id",
              "displayName": "file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1080,
        800
      ],
      "id": "f1083a3c-98f8-4ec5-8828-555a3f4b895a",
      "name": "Documents"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        100,
        440
      ],
      "id": "af93d6db-df6c-44b9-9f70-1a18948bcf8c",
      "name": "Telegram1",
      "webhookId": "8b826288-7a45-4a12-bbf7-e07462532efb",
      "credentials": {
        "telegramApi": {
          "id": "Sh2pRa2M9IVbH9JY",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        420,
        440
      ],
      "id": "131b41be-8a34-4924-9fa1-f7205eeab48a",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "26deff3f-4602-47c3-823b-8f2c45d332ad",
              "name": "text",
              "value": "={{ $('Telegram Trigger').item.json.message.caption }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        280
      ],
      "id": "279b7960-df58-4ad2-8ef2-2da85fdaa846",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "31c62aff-11d6-4909-9803-9a4574da9fb3",
              "name": "text",
              "value": "={{ $('Telegram Trigger').item.json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        100,
        600
      ],
      "id": "9f997fda-de33-4990-a39e-0482f43a936c",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": "b",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b59a106b-1951-414f-8a7d-28586d74750a",
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "d",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f45c3cc7-dc14-4a4a-bcf0-f8a112acb88c",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -140,
        440
      ],
      "id": "8228764f-19d0-4f9a-b33f-72d6f5bb2bd5",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "speech",
        "voice": {
          "__rl": true,
          "value": "ZtcPZrt9K4w8e1OB9M6w",
          "mode": "list",
          "cachedResultName": "Mia Moore - Studio Presenter"
        },
        "text": "={{ $json.output }}",
        "additionalOptions": {},
        "requestOptions": {}
      },
      "type": "@elevenlabs/n8n-nodes-elevenlabs.elevenLabs",
      "typeVersion": 1,
      "position": [
        900,
        440
      ],
      "id": "092172d4-44e6-4934-8089-d81e75c1810b",
      "name": "Convert text to speech",
      "executeOnce": false,
      "credentials": {
        "elevenLabsApi": {
          "id": "MiJotYjSfrxqghxa",
          "name": "ElevenLabs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        860,
        200
      ],
      "id": "705a98af-a615-4a43-bf6b-8d72da3623df",
      "name": "Send an audio file",
      "webhookId": "3cd55a7d-9a5e-4747-b7bf-9a93079955f2",
      "credentials": {
        "telegramApi": {
          "id": "Sh2pRa2M9IVbH9JY",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        400,
        740
      ],
      "id": "57880622-015b-473d-865f-cf9842e13905",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "name": "email_agent",
        "description": "Call this tool to handle all things related to gmail",
        "workflowId": {
          "__rl": true,
          "value": "2S0q2XVQlpjoIilr",
          "mode": "list",
          "cachedResultName": "Gmail Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message": "={{ $fromAI(\"message\") }}",
            "name": "={{ $fromAI(\"name\") }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        840,
        800
      ],
      "id": "827b798a-949e-4573-8b86-3902c3eb13bc",
      "name": "email_agent"
    },
    {
      "parameters": {
        "name": "calendar_agent",
        "description": "Call this tool to deal with anything related to Google calendar",
        "workflowId": {
          "__rl": true,
          "value": "1FFb2yQOJdxeCbXU",
          "mode": "list",
          "cachedResultName": "Google Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $fromAI(\"name\", \"this is the name of the attendee that I'm inviting. Leave this blank if there's no names\") }}",
            "message": "={{ $fromAI(\"query\", \"what are you trying to do with Google calendar?\") }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        700,
        800
      ],
      "id": "33d6777a-11d8-4891-94cb-96171d19eb10",
      "name": "calendar_agent"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        260,
        440
      ],
      "id": "1c908a50-074c-442c-999f-491dedb9f41e",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "9f619NiARiQGzGvW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "path": "c8609ff3-adfe-4982-804a-5792f41f4443",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -360,
        440
      ],
      "id": "e241f8d2-218e-4a39-bfe7-52996e5f92bd",
      "name": "Webhook",
      "webhookId": "c8609ff3-adfe-4982-804a-5792f41f4443"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1080,
        440
      ],
      "id": "fc3bbe17-e2aa-45a3-b30a-78ac8245d058",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Airtable": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Documents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Convert text to speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Convert text to speech": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an audio file": {
      "main": [
        []
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "email_agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendar_agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "78bc00f8-16fe-4996-b4ee-ae94129a7ac4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "adcca09070fe54bee814223b70d273559600ccda916d5aea95e8ca21a7a9e368"
  },
  "id": "vQ3mtRRKmI2sGj9V",
  "tags": []
}