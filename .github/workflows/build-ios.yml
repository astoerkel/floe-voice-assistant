name: Build and Test iOS App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: macos-14
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Cache SPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.swift', '**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      
      - name: Install xcpretty
        run: gem install xcpretty
      
      - name: Build iOS App
        run: |
          set -o pipefail && xcodebuild -project VoiceAssistant.xcodeproj \
            -scheme VoiceAssistant \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            clean build | xcpretty
      
      - name: Build watchOS App
        run: |
          set -o pipefail && xcodebuild -project VoiceAssistant.xcodeproj \
            -scheme "VoiceAssistant Watch App Watch App" \
            -destination 'platform=watchOS Simulator,name=Apple Watch Series 9 (45mm)' \
            clean build | xcpretty
      
      - name: Run iOS Tests
        run: |
          set -o pipefail && xcodebuild -project VoiceAssistant.xcodeproj \
            -scheme VoiceAssistant \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            test | xcpretty
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  archive-ipa:
    runs-on: macos-14
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Install certificates
        env:
          CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
          CERTIFICATES_PASSWORD: ${{ secrets.CERTIFICATES_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create temporary keychain
          KEYCHAIN_NAME="build.keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          
          # Import certificate
          echo "$CERTIFICATES_P12" | base64 --decode > certificate.p12
          security import certificate.p12 -k "$KEYCHAIN_NAME" -P "$CERTIFICATES_PASSWORD" -T /usr/bin/codesign
          security list-keychain -d user -s "$KEYCHAIN_NAME"
          
          # Allow codesign to access keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
      
      - name: Install provisioning profile
        env:
          PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          # Create provisioning profile directory
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          
          # Decode and install profile
          echo "$PROVISIONING_PROFILE" | base64 --decode > profile.mobileprovision
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
      
      - name: Archive iOS App
        run: |
          xcodebuild -project VoiceAssistant.xcodeproj \
            -scheme VoiceAssistant \
            -configuration Release \
            -archivePath VoiceAssistant.xcarchive \
            -allowProvisioningUpdates \
            archive
      
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath VoiceAssistant.xcarchive \
            -exportPath export \
            -exportOptionsPlist ExportOptions.plist \
            -allowProvisioningUpdates
      
      - name: Upload Archive
        uses: actions/upload-artifact@v3
        with:
          name: ios-archive
          path: VoiceAssistant.xcarchive
      
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: export/*.ipa
      
      - name: Clean up keychain
        if: always()
        run: |
          security delete-keychain build.keychain || true
          rm -f certificate.p12 profile.mobileprovision

  analyze:
    runs-on: macos-14
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Run SwiftLint
        run: |
          if which swiftlint >/dev/null; then
            swiftlint
          else
            echo "SwiftLint not installed, installing..."
            brew install swiftlint
            swiftlint
          fi
      
      - name: Analyze code
        run: |
          xcodebuild -project VoiceAssistant.xcodeproj \
            -scheme VoiceAssistant \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            analyze | xcpretty